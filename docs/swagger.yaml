definitions:
  dto.UserAuthorizationDTO:
    properties:
      email:
        example: example@mail.ru
        maxLength: 40
        minLength: 5
        type: string
      password:
        example: "12345678"
        maxLength: 18
        minLength: 5
        type: string
    type: object
  dto.UserBanDTO:
    properties:
      isBan:
        type: boolean
    type: object
  dto.UserRegistrationDTO:
    properties:
      email:
        example: example@mail.ru
        maxLength: 40
        minLength: 5
        type: string
      name:
        example: Иван
        maxLength: 20
        minLength: 2
        type: string
      password:
        example: "12345678"
        maxLength: 18
        minLength: 8
        type: string
      redirectActiveEmail:
        example: https://example.ru/email/activate
        type: string
    type: object
  dto.UserUpdateDTO:
    properties:
      email:
        maxLength: 40
        minLength: 5
        type: string
      name:
        maxLength: 20
        minLength: 2
        type: string
      password:
        maxLength: 18
        minLength: 5
        type: string
    type: object
  model.User:
    properties:
      createdAt:
        type: string
      email:
        type: string
      id:
        type: string
      isAdmin:
        type: boolean
      isBanned:
        type: boolean
      isEmail:
        type: boolean
      name:
        type: string
      updatedAt:
        type: string
    type: object
  model.UserAndTokens:
    properties:
      createdAt:
        type: string
      email:
        type: string
      id:
        type: string
      isAdmin:
        type: boolean
      isBanned:
        type: boolean
      isEmail:
        type: boolean
      name:
        type: string
      tokens:
        properties:
          access:
            type: string
          refresh:
            type: string
        type: object
      updatedAt:
        type: string
    type: object
  v1.errorResponse:
    properties:
      message:
        type: string
    type: object
info:
  contact:
    email: ilmar7786@yandex.ru
    name: API Support
    url: https://t.me/ilya112
  description: API Documentation Xenforo Server.
  title: Xenforo API
  version: "1.0"
paths:
  /admin/users:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/v1.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Список пользователей
      tags:
      - admin
  /admin/users/{user_id}/ban:
    put:
      consumes:
      - application/json
      description: Блокировка и разблокировка пользователя
      parameters:
      - description: credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.UserBanDTO'
      - description: ID пользователя
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/v1.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Бан
      tags:
      - admin
  /users/info:
    get:
      consumes:
      - application/json
      description: Данные о пользователе
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
      security:
      - ApiKeyAuth: []
      summary: Информация о пользователи
      tags:
      - users
  /users/profile:
    put:
      consumes:
      - application/json
      description: Обновления атрибутов пользователя
      parameters:
      - description: credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.UserUpdateDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Обновить
      tags:
      - users
  /users/sign-in:
    post:
      consumes:
      - application/json
      parameters:
      - description: credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.UserAuthorizationDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserAndTokens'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errorResponse'
      summary: Авторизация
      tags:
      - users
  /users/sign-up:
    post:
      consumes:
      - application/json
      description: <b>RedirectActiveEmail</b> - ссылка редиректа для активации почты.
        Эта ссылка указывается в письме
      parameters:
      - description: credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.UserRegistrationDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserAndTokens'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errorResponse'
      summary: Регистрация
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
